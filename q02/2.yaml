apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: backend-deployment
  name: backend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend-deployment
    spec:
      containers:
        - image: redis:6.2
          name: redis
          env:
            - name: REDIS_PASSWORD
              value: securepassword
          resources: {}
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: backend-deployment
  name: backend-service
spec:
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: backend-deployment
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: frontend-deployment
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: frontend-deployment
    spec:
      containers:
        - image: nginx:1.21
          name: nginx
          resources: {}
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: frontend-deployment
  name: frontend-service
spec:
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000
      protocol: TCP
  selector:
    app: frontend-deployment
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-service-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: backend-deployment
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend-deployment
      ports:
        - protocol: TCP
          port: 6379
c